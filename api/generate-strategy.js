// api/generate-strategy.js
import Groq from 'groq-sdk';

const groq = new Groq({
  apiKey: process.env.GROQ_API_KEY
});

export default async function handler(req, res) {
  // CORS headers
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  const { answers, email } = req.body;

  console.log('=== D√©but g√©n√©ration strat√©gie ===');
  console.log('Email:', email);
  console.log('Entreprise:', answers.company_name);

  try {
    // Construire le prompt pour Groq
    const prompt = buildPrompt(answers);

    console.log('Appel Groq API...');

    // Appeler Groq pour g√©n√©rer la strat√©gie
    const completion = await groq.chat.completions.create({
      messages: [
        {
          role: 'system',
          content: `Tu es un expert en strat√©gie commerciale B2B/B2C. Tu g√©n√®res des strat√©gies de vente ultra-personnalis√©es, actionnables et efficaces. Ton style est direct, professionnel et orient√© r√©sultats. Tu utilises des frameworks de vente √©prouv√©s (SPIN, Challenger Sale, MEDDIC) adapt√©s au contexte.`
        },
        {
          role: 'user',
          content: prompt
        }
      ],
      model: 'llama-3.3-70b-versatile',
      temperature: 0.7,
      max_tokens: 3000,
    });

    console.log('Groq API r√©ponse OK');

    const strategyText = completion.choices[0]?.message?.content;
    const strategy = parseStrategy(strategyText, answers);

    console.log('Strat√©gie pars√©e');

    // Envoyer email √† ugo@saleswhisperer.io
    console.log('Envoi email notification...');
    await sendEmailNotification(answers, email, strategy);

    // Envoyer email au prospect
    console.log('Envoi email prospect...');
    await sendProspectEmail(email, strategy, answers);

    console.log('=== Fin g√©n√©ration strat√©gie ===');

    res.status(200).json({ strategy });

  } catch (error) {
    console.error('=== ERREUR ===');
    console.error('Message:', error.message);
    console.error('Stack:', error.stack);
    
    res.status(500).json({ 
      error: 'Erreur lors de la g√©n√©ration',
      fallback: true,
      details: error.message
    });
  }
}

function buildPrompt(answers) {
  const isCold = answers.call_type === 'cold';
  const callType = isCold ? 'prospection √† froid (cold call)' : 'call qualifi√©';
  
  return `
Tu es un expert en strat√©gie commerciale. Tu dois cr√©er une strat√©gie ULTRA-PERSONNALIS√âE en INTERPR√âTANT et REFORMULANT les informations fournies. 

‚ö†Ô∏è R√àGLES CRITIQUES :
- NE JAMAIS copier-coller textuellement les inputs
- INTERPR√âTER le contexte et cr√©er des phrases fluides et naturelles
- SYNTH√âTISER les informations en langage commercial professionnel
- Utiliser un ton ${answers.tone?.toLowerCase() || 'professionnel'}
- Parler comme un vrai commercial expert, pas comme un robot

CONTEXTE √Ä INTERPR√âTER :

üéØ TYPE DE CALL : ${callType}
Canal : ${answers.channel}
Objectif : ${answers.call_objective}

üè¢ ENTREPRISE :
Nom : ${answers.company_name || '[Entreprise]'}
March√© : ${answers.market}
Offre : ${answers.product_type}
Transformation client : "${answers.value_prop}"
Diff√©renciation : "${answers.usp}"
Concurrents : ${answers.competitors || 'concurrents du march√©'}
${answers.ticket ? `Ticket moyen : ${answers.ticket}` : ''}
${answers.cycle_length ? `Cycle de vente : ${answers.cycle_length}` : ''}

üë§ PROSPECT :
Poste/Titre : ${answers.prospect_title}
${answers.prospect_company_size ? `Taille entreprise : ${answers.prospect_company_size}` : ''}
Pain point identifi√© : "${answers.main_pain}"
Triggers d'achat : "${answers.trigger_events}"
Objection principale : ${answers.top_objection}
${answers.decision_maker ? `D√©cideur : ${answers.decision_maker}` : ''}

---

G√âN√àRE une strat√©gie avec ces sections (balises exactes requises) :

[INTRO]
${isCold ? 
`Cr√©e une accroche de cold call en 2-3 phrases NATURELLES qui :
1. Se pr√©sente de fa√ßon directe et professionnelle
2. Donne une RAISON CR√âDIBLE de l'appel (bas√©e sur le pain point "${answers.main_pain}" et les triggers "${answers.trigger_events}")
3. Demande l'autorisation de continuer

‚ö†Ô∏è INTERDICTIONS :
- Ne liste pas les triggers mot √† mot
- Ne copie pas "${answers.main_pain}" tel quel
- Reformule en langage commercial naturel

EXEMPLE DE BON STYLE :
"Bonjour [Pr√©nom], je suis [Nom] de ${answers.company_name}. J'ai remarqu√© que beaucoup de [${answers.prospect_title}] dans [secteur] font face √† [reformulation intelligente du pain point]. C'est justement notre sp√©cialit√© d'aider des entreprises comme la v√¥tre √† [b√©n√©fice]. Avez-vous 2 minutes ?"` 
: 
`Cr√©e une ouverture de call qualifi√© qui :
1. Remercie le prospect
2. Rappelle bri√®vement le contexte (sans √™tre lourd)
3. Pose une question d'ouverture qui engage la d√©couverte

Style conversationnel et professionnel.`}

[DISCOVERY]
Cr√©e 4 questions de d√©couverte SPIN selling :
1. SITUATION : Question factuelle sur leur contexte actuel
2. PROBL√àME : Question qui explore "${answers.main_pain}" sans le citer mot √† mot
3. IMPLICATION : Question sur les cons√©quences du probl√®me
4. NEED-PAYOFF : Question qui fait visualiser la solution

‚ö†Ô∏è Questions doivent √™tre NATURELLES, pas g√©n√©riques. Adapt√©es au secteur ${answers.market} et au poste ${answers.prospect_title}.

[VALUE_POSITIONING]
Cr√©e un pitch de valeur en 3-4 phrases qui :
1. Reformule "${answers.value_prop}" en langage impactant
2. Connecte au pain point "${answers.main_pain}" (reformul√©)
3. Mentionne la diff√©renciation "${answers.usp}" naturellement
4. Donne un r√©sultat CONCRET et MESURABLE

Ne copie AUCUNE phrase des inputs. R√©interpr√®te tout.

[DIFFERENTIATION]
Cr√©e 3-4 bullets de diff√©renciation vs ${answers.competitors || 'concurrents'} :
- Reformule "${answers.usp}" en avantage concurrentiel clair
- Ajoute 2-3 autres diff√©renciateurs logiques bas√©s sur ${answers.product_type}
- Utilise un langage percutant et commercial

Format : "‚úì [Avantage] : [Explication concr√®te en 1 phrase]"

[OBJECTION]
Cr√©e une r√©ponse COMPL√àTE √† l'objection ${answers.top_objection} en 4 √©tapes :

1. EMPATHIE : Valide l'objection sans √™tre condescendant
2. QUESTION INVERS√âE : Pose une question qui fait r√©fl√©chir
3. REFRAME : Change l'angle de vue (co√ªt vs investissement, timing vs opportunit√©, etc.)
4. PREUVE : Mini-exemple ou stat qui renforce

Longueur : 4-6 phrases. Style : ${answers.tone?.toLowerCase() || 'professionnel'}.

[CLOSING]
Cr√©e une technique de closing pour "${answers.call_objective}" qui :
- R√©capitule bri√®vement (1 phrase)
- Pose une question de closing directe
- Propose une NEXT STEP concr√®te avec choix (dates, format, etc.)

Ne sois pas h√©sitant. Sois assum√© et direct.

[EMAIL]
Cr√©e un email de suivi en 3 parties :

**OBJET** : Court et intrigant (8-12 mots max)

**CORPS** :
1. Rappel personnalis√© de l'√©change (1-2 phrases)
2. 3 points cl√©s de valeur (bullets)
3. Call-to-action clair avec proposition de cr√©neaux

Ton : professionnel mais pas corporate. Humain.

---

‚ö†Ô∏è RAPPEL FINAL : 
- Z√âRO copier-coller des inputs
- TOUT doit sonner naturel et fluide
- Parle comme un top 1% sales rep
- Adapte le vocabulaire au niveau ${answers.market} ${answers.product_type}
`;
}

function parseStrategy(text, answers) {
  const sections = {
    intro: extractSection(text, 'INTRO'),
    discovery: extractSection(text, 'DISCOVERY').split('\n').filter(q => q.trim() && q.length > 10),
    value_positioning: extractSection(text, 'VALUE_POSITIONING'),
    differentiation: extractSection(text, 'DIFFERENTIATION'),
    objection_handling: {
      [answers.top_objection]: extractSection(text, 'OBJECTION')
    },
    closing: extractSection(text, 'CLOSING'),
    follow_up_email: extractSection(text, 'EMAIL')
  };

  return sections;
}

function extractSection(text, section) {
  const regex = new RegExp(`\\[${section}\\]([\\s\\S]*?)(?=\\[|$)`, 'i');
  const match = text.match(regex);
  return match ? match[1].trim() : '';
}

async function sendEmailNotification(answers, prospectEmail, strategy) {
  const resendApiKey = process.env.RESEND_API_KEY;
  
  if (!resendApiKey) {
    console.log('‚ö†Ô∏è Pas de cl√© Resend configur√©e');
    return;
  }

  try {
    console.log('üìß Envoi email √† ugo@saleswhisperer.io...');
    
    const response = await fetch('https://api.resend.com/emails', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${resendApiKey}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        from: 'Script Lab <onboarding@resend.dev>',
        to: 'ugo@saleswhisperer.io',
        subject: `üéØ Nouveau lead Script Lab - ${answers.company_name || 'Lead int√©ress√©'}`,
        html: `
          <h2>Nouveau lead Script Lab !</h2>
          
          <h3>üìß Contact</h3>
          <p><strong>Email :</strong> ${prospectEmail}</p>
          
          <h3>üè¢ Entreprise</h3>
          <ul>
            <li><strong>Nom :</strong> ${answers.company_name || 'Non sp√©cifi√©'}</li>
            <li><strong>March√© :</strong> ${answers.market}</li>
            <li><strong>Solution :</strong> ${answers.product_type}</li>
            <li><strong>Value Prop :</strong> ${answers.value_prop}</li>
            <li><strong>USP :</strong> ${answers.usp}</li>
            <li><strong>Ticket moyen :</strong> ${answers.ticket || 'Non sp√©cifi√©'}</li>
          </ul>
          
          <h3>üéØ Prospect</h3>
          <ul>
            <li><strong>Poste :</strong> ${answers.prospect_title}</li>
            <li><strong>Pain point :</strong> ${answers.main_pain}</li>
            <li><strong>Triggers :</strong> ${answers.trigger_events}</li>
            <li><strong>Objection #1 :</strong> ${answers.top_objection}</li>
          </ul>
          
          <h3>üìû Contexte Call</h3>
          <ul>
            <li><strong>Type :</strong> ${answers.call_type === 'cold' ? 'Cold Call' : 'Call Qualifi√©'}</li>
            <li><strong>Canal :</strong> ${answers.channel}</li>
            <li><strong>Objectif :</strong> ${answers.call_objective}</li>
          </ul>
          
          <hr>
          <p><em>Ce lead a g√©n√©r√© une strat√©gie compl√®te et est potentiellement int√©ress√© par Sales Whisperer.</em></p>
        `
      })
    });

    const result = await response.json();
    
    if (!response.ok) {
      console.error('‚ùå Erreur Resend:', result);
    } else {
      console.log('‚úÖ Email notification envoy√©:', result.id);
    }
  } catch (error) {
    console.error('‚ùå Erreur envoi email notification:', error.message);
  }
}

async function sendProspectEmail(email, strategy, answers) {
  const resendApiKey = process.env.RESEND_API_KEY;
  
  if (!resendApiKey) {
    console.log('‚ö†Ô∏è Pas de cl√© Resend pour email prospect');
    return;
  }

  try {
    console.log('üìß Envoi email au prospect:', email);
    
    const response = await fetch('https://api.resend.com/emails', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${resendApiKey}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        from: 'Script Lab <onboarding@resend.dev>',
        to: email,
        subject: `Votre strat√©gie commerciale personnalis√©e - ${answers.company_name || 'Script Lab'}`,
        html: `
          <h1>Votre strat√©gie commerciale est pr√™te ! üéØ</h1>
          
          <p>Bonjour,</p>
          
          <p>Voici votre strat√©gie commerciale compl√®te et personnalis√©e bas√©e sur votre contexte unique.</p>
          
          <p><strong>‚ö†Ô∏è Cette strat√©gie est accessible directement sur la page de r√©sultats. Conservez-la !</strong></p>
          
          <hr>
          
          <h2>üöÄ Envie d'aller plus loin ?</h2>
          
          <p>Imaginez avoir un assistant IA qui vous sugg√®re les bonnes r√©ponses <strong>en temps r√©el</strong> pendant vos appels...</p>
          
          <p>C'est exactement ce que fait <strong>Sales Whisperer</strong> :</p>
          <ul>
            <li>‚úÖ Suggestions de r√©ponses instantan√©es</li>
            <li>‚úÖ Analyse en temps r√©el de la conversation</li>
            <li>‚úÖ Gestion des objections</li>
            <li>‚úÖ Insights post-call</li>
          </ul>
          
          <p><a href="https://www.saleswhisperer.io/" style="display: inline-block; padding: 12px 24px; background: #3B82F6; color: white; text-decoration: none; border-radius: 8px; font-weight: bold; margin-top: 16px;">D√©couvrir Sales Whisperer</a></p>
          
          <hr>
          
          <p>Bonne vente ! üí™</p>
          
          <p><em>L'√©quipe Script Lab</em></p>
        `
      })
    });

    const result = await response.json();
    
    if (!response.ok) {
      console.error('‚ùå Erreur email prospect:', result);
    } else {
      console.log('‚úÖ Email prospect envoy√©:', result.id);
    }
  } catch (error) {
    console.error('‚ùå Erreur envoi email prospect:', error.message);
  }
}
